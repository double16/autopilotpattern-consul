#!/bin/bash
set -eo pipefail

#
# Update the -advertise address based on the interface that ContainerPilot has
# been told to listen on.
#
preStart() {
    _log "Updating consul advertise address"
    sed -i "s/CONTAINERPILOT_CONSUL_IP/${CONTAINERPILOT_CONSUL_IP}/" /etc/consul/consul.hcl

    if [ -n "$CONSUL_DATACENTER_NAME" ]; then
        _log "Updating consul datacenter name (specified: '${CONSUL_DATACENTER_NAME}' )"
        sed -i "s/CONSUL_DATACENTER_NAME/${CONSUL_DATACENTER_NAME}/" /etc/consul/consul.hcl
    elif [ -f "/native/usr/sbin/mdata-get" ]; then
        DETECTED_DATACENTER_NAME=$(/native/usr/sbin/mdata-get sdc:datacenter_name)
        _log "Updating consul datacenter name (detected from Triton: '${DETECTED_DATACENTER_NAME}')"
        sed -i "s/CONSUL_DATACENTER_NAME/${DETECTED_DATACENTER_NAME}/" /etc/consul/consul.hcl
    elif [ -n "$AWS_REGION" ]; then
        DETECTED_DATACENTER_NAME="$AWS_REGION"
        _log "Updating consul datacenter name (detected from AWS_REGION: '${DETECTED_DATACENTER_NAME}')"
        sed -i "s/CONSUL_DATACENTER_NAME/${DETECTED_DATACENTER_NAME}/" /etc/consul/consul.hcl
    elif curl --connect-timeout 3 -s -o /dev/null --fail http://169.254.169.254/latest/meta-data/placement/availability-zone; then
        DETECTED_DATACENTER_NAME="$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone | sed 's/[a-z]$//')"
        _log "Updating consul datacenter name (detected from AWS EC2: '${DETECTED_DATACENTER_NAME}')"
        sed -i "s/CONSUL_DATACENTER_NAME/${DETECTED_DATACENTER_NAME}/" /etc/consul/consul.hcl
    elif curl --connect-timeout 3 -s --fail -H Metadata:true 'http://169.254.169.254/metadata/instance?api-version=2017-04-02'; then
        DETECTED_DATACENTER_NAME="$(curl -s -H Metadata:true 'http://169.254.169.254/metadata/instance?api-version=2017-04-02' | jq -r .compute.location)"
        _log "Updating consul datacenter name (detected from Azure: '${DETECTED_DATACENTER_NAME}')"
        sed -i "s/CONSUL_DATACENTER_NAME/${DETECTED_DATACENTER_NAME}/" /etc/consul/consul.hcl
    else
        _log "Updating consul datacenter name (default: 'dc1')"
        sed -i "s/CONSUL_DATACENTER_NAME/dc1/" /etc/consul/consul.hcl
    fi
}

#
# Check if a member of a raft. If consul info returns an error we'll pipefail
# and exit for a failed health check.
#
# If we have no peers then try to join the raft via the CNS svc record.  Once a
# node is connected to at least one other peer it'll get the rest of the raft
# via the Consul LAN gossip.
#
# If we end up joining ourselves we just retry on the next health check until
# we've got the whole cluster together.
#
health() {
    if [ -z "${CONSUL_DEV}" -a $(consul info | awk '/num_peers/{print$3}') == 0 ]; then
        _log "No peers in raft"
        consul join ${CONSUL}
    fi
}

_log() {
    echo "    $(date -u '+%Y-%m-%d %H:%M:%S') containerpilot: $@"
}

# ---------------------------------------------------
# parse arguments

# Get function list
funcs=($(declare -F -p | cut -d " " -f 3))

until
    if [ ! -z "$1" ]; then
        # check if the first arg is a function in this file, or use a default
        if [[ " ${funcs[@]} " =~ " $1 " ]]; then
            cmd=$1
            shift 1
        fi

        $cmd "$@"
        if [ $? == 127 ]; then
            help
        fi

        exit
    else
        health
    fi
do
    echo
done
